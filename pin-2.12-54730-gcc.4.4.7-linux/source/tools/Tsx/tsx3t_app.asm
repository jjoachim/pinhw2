; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

    TITLE	C:\Users\tevi\Documents\work\pin\pin_tsx_tests\PinTools\Tsx\tsx3t_app.cpp
    .686P
    .XMM
    include listing.inc
    .model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	?value@@3HC					; value
PUBLIC	?value2@@3HC					; value2
PUBLIC	?numAborts@@3JA					; numAborts
PUBLIC	?numAborts2@@3JA				; numAborts2
PUBLIC	?count@@3HA					; count
_BSS	SEGMENT
?value@@3HC DD	01H DUP (?)				; value
?value2@@3HC DD	01H DUP (?)				; value2
?numAborts@@3JA DD 01H DUP (?)				; numAborts
?numAborts2@@3JA DD 01H DUP (?)				; numAborts2
_BSS	ENDS
_DATA	SEGMENT
?count@@3HA DD	03e8H					; count
; Function compile flags: /Ogtpy
_DATA	ENDS
;	COMDAT ?XBegin@@YAHXZ
_TEXT	SEGMENT
_res$ = -4						; size = 4
?XBegin@@YAHXZ PROC					; XBegin, COMDAT
; File c:\users\tevi\documents\work\pin\pin_tsx_tests\pintools\tsx\tsx3t_app.cpp
; Line 22
    push	ebp
    mov	ebp, esp
    push	ecx
; Line 23
    mov	DWORD PTR _res$[ebp], 1
; Line 36
    push	eax
; Line 41
    DB	-57					; ffffffc7H
; Line 42
    DB	-8					; fffffff8H
; Line 43
    DB	2
; Line 44
    DB	0
; Line 45
    DB	0
; Line 46
    DB	0
; Line 47
    jmp	SHORT $L2$66613
$abortLabel$66614:
; Line 49
    mov	DWORD PTR _res$[ebp], 0
$L2$66613:
; Line 52
    pop	eax
; Line 65
    mov	eax, DWORD PTR _res$[ebp]
; Line 66
    mov	esp, ebp
    pop	ebp
    ret	0
?XBegin@@YAHXZ ENDP					; XBegin
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?XEnd@@YAXXZ
_TEXT	SEGMENT
?XEnd@@YAXXZ PROC					; XEnd, COMDAT
; Line 75
    DB	15					; 0000000fH
; Line 76
    DB	1
; Line 77
    DB	-43					; ffffffd5H
; Line 82
    ret	0
?XEnd@@YAXXZ ENDP					; XEnd
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?XAbort@@YAXXZ
_TEXT	SEGMENT
?XAbort@@YAXXZ PROC					; XAbort, COMDAT
; Line 91
    DB	-58					; ffffffc6H
; Line 92
    DB	-8					; fffffff8H
; Line 93
    DB	0
; Line 98
    ret	0
?XAbort@@YAXXZ ENDP					; XAbort
_TEXT	ENDS
PUBLIC	?ThreadRtn@@YAXPAX@Z				; ThreadRtn
EXTRN	__imp__InterlockedIncrement@4:PROC
; Function compile flags: /Ogtpy
;	COMDAT ?ThreadRtn@@YAXPAX@Z
_TEXT	SEGMENT
_i$66626 = -12						; size = 4
_res$66749 = -8						; size = 4
_res$66737 = -4						; size = 4
_voidPtr$ = 8						; size = 4
?ThreadRtn@@YAXPAX@Z PROC				; ThreadRtn, COMDAT
; Line 107
    push	ebp
    mov	ebp, esp
    sub	esp, 12					; 0000000cH
    push	ebx
; Line 110
    mov	ebx, DWORD PTR __imp__InterlockedIncrement@4
    push	esi
    xor	esi, esi
    push	edi
    mov	DWORD PTR _i$66626[ebp], esi
    mov	edi, 1
    npad	7
$LL10@ThreadRtn:
; Line 114
    add	esi, edi
; Line 115
    mov	DWORD PTR _res$66737[ebp], edi
    push	eax
    DB	-57					; ffffffc7H
    DB	-8					; fffffff8H
    DB	2
    DB	0
    DB	0
    DB	0
    jmp	SHORT $L2$66738
$abortLabel$66739:
    mov	DWORD PTR _res$66737[ebp], 0
$L2$66738:
    pop	eax
; Line 116
    cmp	DWORD PTR _res$66737[ebp], 0
    je	SHORT $LN8@ThreadRtn
; Line 117
    add	DWORD PTR ?value@@3HC, edi		; value
; Line 123
    mov	eax, 1374389535				; 51eb851fH
    imul	esi
    sar	edx, 5
    mov	eax, edx
    shr	eax, 31					; 0000001fH
    add	eax, edx
    imul	eax, 100				; 00000064H
    mov	ecx, esi
    sub	ecx, eax
    jne	SHORT $LN18@ThreadRtn
; Line 125
    DB	-58					; ffffffc6H
    DB	-8					; fffffff8H
    DB	0
$LN18@ThreadRtn:
; Line 127
    DB	15					; 0000000fH
    DB	1
    DB	-43					; ffffffd5H
$LL5@ThreadRtn:
; Line 138
    add	esi, edi
; Line 139
    mov	DWORD PTR _res$66749[ebp], edi
    push	eax
    DB	-57					; ffffffc7H
    DB	-8					; fffffff8H
    DB	2
    DB	0
    DB	0
    DB	0
    jmp	SHORT $L2$66750
$abortLabel$66751:
    mov	DWORD PTR _res$66749[ebp], 0
$L2$66750:
    pop	eax
; Line 140
    cmp	DWORD PTR _res$66749[ebp], 0
    jne	SHORT $LN33@ThreadRtn
; Line 154
    push	OFFSET ?numAborts2@@3JA			; numAborts2
    call	ebx
    jmp	SHORT $LL5@ThreadRtn
$LN8@ThreadRtn:
; Line 131
    push	OFFSET ?numAborts@@3JA			; numAborts
    call	ebx
    jmp	SHORT $LL10@ThreadRtn
$LN33@ThreadRtn:
; Line 141
    add	DWORD PTR ?value2@@3HC, edi		; value2
; Line 146
    mov	eax, 1374389535				; 51eb851fH
    imul	esi
    sar	edx, 5
    mov	eax, edx
    shr	eax, 31					; 0000001fH
    add	eax, edx
    imul	eax, 100				; 00000064H
    mov	ecx, esi
    sub	ecx, eax
    jne	SHORT $LN24@ThreadRtn
; Line 148
    DB	-58					; ffffffc6H
    DB	-8					; fffffff8H
    DB	0
$LN24@ThreadRtn:
; Line 150
    DB	15					; 0000000fH
    DB	1
    DB	-43					; ffffffd5H
    mov	eax, DWORD PTR _i$66626[ebp]
    add	eax, edi
    mov	DWORD PTR _i$66626[ebp], eax
    cmp	eax, 1000				; 000003e8H
    jl	$LL10@ThreadRtn
; Line 158
    pop	edi
    pop	esi
    pop	ebx
    mov	esp, ebp
    pop	ebp
    ret	0
?ThreadRtn@@YAXPAX@Z ENDP				; ThreadRtn
_TEXT	ENDS
PUBLIC	??_C@_0CK@OJOBADHA@Value2?5?$DN?5?$CFd?0?5should?5be?5?$CFd?5?5numAb@ ; `string'
PUBLIC	??_C@_0BP@PBCLPJLP@?$CK?$CK?$CKError?5expected?5some?5aborts?6?$AA@ ; `string'
PUBLIC	??_C@_0CD@DONIPFAI@?$CK?$CK?$CKError?5value?5is?5not?5as?5expecte@ ; `string'
PUBLIC	??_C@_0CI@FMHPNKIB@Value?5?$DN?5?$CFd?0?5should?5be?5?$CFd?5?5numAbo@ ; `string'
PUBLIC	??_C@_0BF@GHPJGCKE@all?5threads?5created?6?$AA@	; `string'
PUBLIC	_main
EXTRN	_JoinOneThread:PROC
EXTRN	__imp__fflush:PROC
EXTRN	__imp____iob_func:PROC
EXTRN	__imp__printf:PROC
EXTRN	_CreateOneThread:PROC
;	COMDAT ??_C@_0CK@OJOBADHA@Value2?5?$DN?5?$CFd?0?5should?5be?5?$CFd?5?5numAb@
CONST	SEGMENT
??_C@_0CK@OJOBADHA@Value2?5?$DN?5?$CFd?0?5should?5be?5?$CFd?5?5numAb@ DB 'V'
    DB	'alue2 = %d, should be %d  numAborts2 %d', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@PBCLPJLP@?$CK?$CK?$CKError?5expected?5some?5aborts?6?$AA@
CONST	SEGMENT
??_C@_0BP@PBCLPJLP@?$CK?$CK?$CKError?5expected?5some?5aborts?6?$AA@ DB '*'
    DB	'**Error expected some aborts', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@DONIPFAI@?$CK?$CK?$CKError?5value?5is?5not?5as?5expecte@
CONST	SEGMENT
??_C@_0CD@DONIPFAI@?$CK?$CK?$CKError?5value?5is?5not?5as?5expecte@ DB '**'
    DB	'*Error value is not as expected', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@FMHPNKIB@Value?5?$DN?5?$CFd?0?5should?5be?5?$CFd?5?5numAbo@
CONST	SEGMENT
??_C@_0CI@FMHPNKIB@Value?5?$DN?5?$CFd?0?5should?5be?5?$CFd?5?5numAbo@ DB 'V'
    DB	'alue = %d, should be %d  numAborts %d', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@GHPJGCKE@all?5threads?5created?6?$AA@
CONST	SEGMENT
??_C@_0BF@GHPJGCKE@all?5threads?5created?6?$AA@ DB 'all threads created', 0aH
    DB	00H						; `string'
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT _main
_TEXT	SEGMENT
_threadHandles$ = -400					; size = 400
_argc$ = 8						; size = 4
_argv$ = 12						; size = 4
_main	PROC						; COMDAT
; Line 161
    sub	esp, 400				; 00000190H
    push	esi
    push	edi
; Line 166
    lea	esi, DWORD PTR _threadHandles$[esp+408]
    mov	edi, 100				; 00000064H
$LL10@main:
; Line 168
    push	0
    push	OFFSET ?ThreadRtn@@YAXPAX@Z		; ThreadRtn
    push	esi
    call	_CreateOneThread
    add	esp, 12					; 0000000cH
    add	esi, 4
    dec	edi
    jne	SHORT $LL10@main
; Line 171
    mov	edi, DWORD PTR __imp__printf
    push	OFFSET ??_C@_0BF@GHPJGCKE@all?5threads?5created?6?$AA@
    call	edi
; Line 172
    call	DWORD PTR __imp____iob_func
    add	eax, 32					; 00000020H
    push	eax
    call	DWORD PTR __imp__fflush
    add	esp, 8
; Line 173
    xor	esi, esi
    npad	7
$LL7@main:
; Line 175
    mov	eax, DWORD PTR _threadHandles$[esp+esi*4+408]
    push	eax
    call	_JoinOneThread
    inc	esi
    add	esp, 4
    cmp	esi, 100				; 00000064H
    jl	SHORT $LL7@main
; Line 177
    mov	ecx, DWORD PTR ?numAborts@@3JA		; numAborts
    mov	edx, DWORD PTR ?value@@3HC		; value
    push	ecx
    push	100000					; 000186a0H
    push	edx
    push	OFFSET ??_C@_0CI@FMHPNKIB@Value?5?$DN?5?$CFd?0?5should?5be?5?$CFd?5?5numAbo@
    call	edi
; Line 178
    mov	eax, DWORD PTR ?value@@3HC		; value
    add	esp, 16					; 00000010H
    cmp	eax, 100000				; 000186a0H
    je	SHORT $LN4@main
$LN17@main:
; Line 180
    push	OFFSET ??_C@_0CD@DONIPFAI@?$CK?$CK?$CKError?5value?5is?5not?5as?5expecte@
    call	edi
    add	esp, 4
    pop	edi
; Line 181
    or	eax, -1
    pop	esi
; Line 200
    add	esp, 400				; 00000190H
    ret	0
$LN4@main:
; Line 183
    cmp	DWORD PTR ?numAborts@@3JA, 0		; numAborts
    jne	SHORT $LN3@main
$LN18@main:
; Line 185
    push	OFFSET ??_C@_0BP@PBCLPJLP@?$CK?$CK?$CKError?5expected?5some?5aborts?6?$AA@
    call	edi
    add	esp, 4
    pop	edi
; Line 186
    or	eax, -1
    pop	esi
; Line 200
    add	esp, 400				; 00000190H
    ret	0
$LN3@main:
; Line 188
    mov	ecx, DWORD PTR ?numAborts2@@3JA		; numAborts2
    mov	edx, DWORD PTR ?value2@@3HC		; value2
    push	ecx
    push	100000					; 000186a0H
    push	edx
    push	OFFSET ??_C@_0CK@OJOBADHA@Value2?5?$DN?5?$CFd?0?5should?5be?5?$CFd?5?5numAb@
    call	edi
; Line 189
    mov	eax, DWORD PTR ?value2@@3HC		; value2
    add	esp, 16					; 00000010H
    cmp	eax, 100000				; 000186a0H
; Line 192
    jne	SHORT $LN17@main
; Line 194
    cmp	DWORD PTR ?numAborts2@@3JA, 0		; numAborts2
; Line 197
    je	SHORT $LN18@main
; Line 199
    pop	edi
    xor	eax, eax
    pop	esi
; Line 200
    add	esp, 400				; 00000190H
    ret	0
_main	ENDP
_TEXT	ENDS
END
